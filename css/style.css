/*________________________________reset.css   START___________________*/
html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed,
figure, figcaption, footer, header, hgroup,
menu, nav, output, ruby, section, summary,
time, mark, audio, video {         
  padding: 0;  
  border: 0; 
  margin: 0;/*Cброс всех отступов:*/
  
  font-size: 100%;
  -webkit-text-size-adjust: 100%; 
  -ms-text-size-adjust: 100%; 
  font: inherit; /*Наследовать значение свойства у родительского элемента*/
  vertical-align: baseline; /*Выравнивает базовую линию текущего элемента по базовой
   линии родителя. 
  Если родительский элемент не имеет базовой линии, 
  то за нее принимается нижняя граница элемента.*/
} 

body {
    line-height: 1; /*Мы меняем МЕЖСТРОЧНЫЙ ИНТЕРВАЛ*/
}

ol, ul { /*СПИСОК <ol>-пронумерован, <ul>-промаркирован*/
    list-style: none; /*Удаление маркеров и нумерации*/
}

 /* Improve readability when focused and also mouse hovered in all browsers.*/
a:active,
a:hover {
    outline: 0;
}

/**
 * Address `outline` inconsistency between Chrome and other browsers. */
a:focus { 
    outline: thin dotted;/* Универсальное свойство, одновременно устанавливающе
    цвет, стиль и толщину внешней границы на всех  четырех сторонах элемента.
    НЕ ВЛИЯЕТ НА ПОЛОЖЕНИЕ БЛОКА И ЕГО ШИРИНУ.
    Рамка:  толщина thin (2 пиксела) тонкий-пунктир;*/
}
            
:focus { /*Псевдокласс :focus определяет стиль для элемента получающего фокус. 
 Например, им может быть текстовое поле формы, в которое устанавливается курсор.*/
    outline: 0; /* Универсальное свойство, одновременно устанавливающее
    цвет, стиль и толщину внешней границы на всех  четырех сторонах элемента.
    В отличие от линии, задаваемой через border, 
    свойство outline НЕ ВЛИЯЕТ НА ПОЛОЖЕНИЕ БЛОКА И ЕГО ШИРИНУ.
    outline: outline-color || outline-style || outline-width | inherit*/
}

/**
 * 1. Remove border when inside `a` element in IE 6/7/8/9 and Firefox 3.
 * 2. Improve image quality when scaled in IE 7.
 */
img {
    border: 0; /* 1 */
    -ms-interpolation-mode: bicubic; /* 2 */
    vertical-align: middle;/*Выравнивает элемент по вертикали относительно своего
     родителя, окружающего текста или ячейки таблицы.
      middle -Выравнивание средней точки элемента по базовой линии родителя плюс
      половина высоты родительского элемента.*/
}

/**
 * Address margin not present in IE 6/7/8/9, Safari 5, and Opera 11.
 */
figure {/*Используется для группирования любых элементов, например, изображений
          <img> и текстового описания к ним <p> 
                       <figure>
                            <p><img src="images/thumb1.jpg" alt="" /></p>
                            <figcaption>Софийский собор</figcaption>
                       </figure>
                       <figure>
                            <p><img src="images/thumb2.jpg" alt="" /></p>
                            <figcaption>Польский костел</figcaption>
                       </figure>
   в HTML, c последующей общей стилизацией всех этих элементов в CSS */
    margin: 0;
}

table {
    border-collapse: collapse; /*Линия между ячейками отображается только одна*/
    border-spacing: 0; /*расстояние между границами ячеек в таблице =0*/
}


blockquote, q {/*<blockquote>-текст в кавычках-наклонный, <q>-текст в кавычках*/
    quotes: none; /*Указывает, что значения "Open-Quote" и "Close-Quote" 
                Свойства "Content" не будут создавать никаких кавычек*/
}

blockquote:before, blockquote:after,
q:before, q:after {/*Расскрывающиеся и Закрывающиеся КАВЫЧКИ*/
    content: '';
    content: none;
}

/* Correct `inline-block` display not defined in IE 6/7/8/9 and Firefox 3. */
audio,
canvas,/*Создает область, в которой при помощи JavaScript можно рисовать разные
         объекты, выводить изображения*/
video {
    display: inline-block; /*Это значение генерирует блочный элемент, который 
    обтекается другими элементами веб-страницы подобно встроенному элементу.*/
    *display: inline;
    *zoom: 1;
    max-width: 100%;/*Гарантирует, что при уменьшении области просмотра любой
              медиа-контент будут уменьшаться в соответствии с шириной контейнеров.*/
}

/*Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices. */
audio:not([controls]) {
    display: none;
    height: 0;
}
/*______________________________КНОПКИ И ЭЛЕМЕНТЫ ФОРМЫ___________________________*/

/**
 * 1. Correct color not being inherited in IE 6/7/8/9.
 * 2. Correct text not wrapping in Firefox 3.
 * 3. Correct alignment displayed oddly in IE 6/7.
 */
legend {/*Тег <legend> применяется для создания заголовка группы элементов ФОРМЫ, 
          которая определяется с помощью тега <fieldset>. Группа элементов
          обозначается в браузере с помощью рамки, а текст, 
          который располагается внутри контейнера <legend>, встраивается в эту рамку.
          <fieldset>
               <legend>Текст</legend>
          </fieldset>*/
    border: 0; /* 1 */
    padding: 0;
    white-space: normal; /* 2 Свойство white-space устанавливает, как отображать
                            пробелы между словами.
                 normal -Текст в окне браузера выводится как обычно, 
                 переносы строк устанавливаются автоматически.*/
    *margin-left: -7px; /* 3 */
}

/** Define consistent border, margin, and padding.
 */
fieldset {/*Элемент <fieldset> предназначен для группирования элементов ФОРМЫ. 
           Браузеры для повышения наглядности отображают результат использования
           тега <fieldset> В ВИДЕ РАМКИ */
    border: 1px solid #c0c0c0;
    margin: 0 2px;
    padding: 0.35em 0.625em 0.75em;
}

textarea {/*<textarea name="comments" rows="10" cols="48"/> </textarea>
            МНОГОСТРОЧНОЕ ТЕКСТОВОЕ ПОЛЕ -10 символов В ВЫСОТУ и 48 символов В ШИРИНУ*/
    overflow: auto;
      /* войство CSS overflow определяет, необходимо ли для переполненного блочного 
        элемента содержимое обрезать, ПРЕДОСТАВИТЬ ПОЛОСЫ ПРОКРУТКИ или просто 
        отобразить. 
        visible - По умолчанию. Содержимое не обрезается, может отображаться снаружи
        блока, в котором оно расположено.
        hidden  - Контет обрезается, без предоставления прокрутки.
        scroll  - Содержимое обрезается и браузер использует ЭЛЕМЕНТЫ ПРОКРУТКИ.
        auto    - Зависит от БраузерА - Firefox предоставляют прокрутку,
        если содержимое переполняет блок.*/
    vertical-align: top;
                /*top - Выравнивание верхнего края элемента по верху самого высокого
                 элемента строки.*/
    resize: vertical;/*Указывает, можно ли пользователю изменять размеры текстового
     поля.
          none - Размеры элемента не изменяются.
          both - Можно изменять размеры элемента по горизонтали и вертикали.
          horizontal - Можно изменять размеры элемента только по горизонтали.
          vertical - Можно изменять размеры элемента только по вертикали.*/
}

/**
 * 1. Correct font size not being inherited in all browsers.
 * 2. Address margins set differently in IE 6/7, Firefox 3+, Safari 5,
 *    and Chrome.
 * 3. Improve appearance and consistency in all browsers.
 */
button,
input,
select,
textarea {
    font-size: 100%; /* 1 */
    margin: 0; /* 2 */
    vertical-align: baseline; /* 3 Выравнивает элемент по вертикали относительно
     своего родителя, окружающего текста или ячейки таблицы. 
    baseline - Выравнивает базовую линию текущего элемента по базовой линии родителя. 
               Если родительский элемент не имеет базовой линии, то за нее принимается
               нижняя граница элемента.
    middle -   Выравнивание средней точки элемента по базовой линии родителя
    плюс половина высоты родительского элемента.
                                   */
    vertical-align: middle; /* 3 */
    line-height: normal; /*Мы меняем МЕЖСТРОЧНЫЙ ИНТЕРВАЛ*/

    text-transform: none;
    /*Управляет преобразованием текста элемента в заглавные или прописные символы. 
      Когда значение отлично от none, регистр исходного текста будет изменен.
                uppercase - Заглавные буквы 
               capitalize - Каждое слово начинается с заглавной буквы */
}

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 * 4. Remove inner spacing in IE 7 without affecting normal text inputs.
 *    Known issue: inner spacing remains in IE 6. */
button,
html input[type="button"], /* 1 */
input[type="reset"],
input[type="submit"] {
    -webkit-appearance: button; /* 2 Свойство appearance может быть использовано
     для того, чтобы элемент выглядел как стандартный пользовательский элемент
     для этой платформы.
                        button — элемент выглядит как кнопка*/
    cursor: pointer; /* 3 Курсор в виде РУКИ*/
    *overflow: visible;  /* 4 Свойство overflow управляет отображением содержания
     блочного элемента, если оно целиком не помещается и выходит за область заданных
     размеров.
    visible - Отображается все содержание элемента, даже за пределами
    установленной высоты и ширины.*/
}

/**
 * Re-set default cursor for disabled elements.*/
button[disabled],
html input[disabled] {/*Псевдокласс :disabled используется для применения стиля
к заблокированным элементам ФОРМ. 
Такие элементы не могут получить фокус, быть нажатыми или активированы, в текстовых
полях нельзя набирать текст.*/
    cursor: default; /* 3 Курсор в виде СТРЕЛКИ*/
}

/**
 * 1. Address box sizing set to content-box in IE 8/9.
 * 2. Remove excess padding in IE 8/9.
 * 3. Remove excess padding in IE 7.
 *    Known issue: excess padding remains in IE 6. */
input[type="checkbox"], /*элемент -ФЛАЖОК*/
input[type="radio"] { /*ПЕРЕКЛЮЧАТЕЛЬ - ВЫБРАТЬ ОДИН ИЗ ДВУХ ПРЕДЛОЖЕННЫХ ВАРИАНТОВ*/
    box-sizing: border-box; /* 1 -  width + padding + border + 
                                                       (ЗА ПРЕДНЛАМИ БЛОКА margin)*/
    padding: 0; /* 2 */
    *height: 13px; /* 3 */
    *width: 13px; /* 3 */
}

/**/
/**
 * 1. Address `appearance` set to `searchfield` in Safari 5 and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari 5 and Chrome
 *    (include `-moz` to future-proof). */
input[type="search"] {
    -webkit-appearance: textfield; /* 1 Свойство appearance может быть использовано
     для того, чтобы элемент выглядел как стандартный пользовательский элемент для
      этой платформы textfield — элемент выглядит как многострочное поле ввода текста*/
    -moz-box-sizing: content-box;
    -webkit-box-sizing: content-box; /* 2 */
    box-sizing: content-box;
    /* width + (ЗА ПРЕДНЛАМИ БЛОКА padding + border + margin)*/
}

/*В ФОРМЕ поиск по ключевым словам, для ввода которых используется текстовое поле
 с крестиком*/
input[type=search]::-webkit-search-cancel-button,/*НЕСТАНДАРТНЫЙ псевдо-элемент
 представляет собой кнопку (на кнопке «отмена») на крае
  <input>из type="search"которого убирает текущее значение <input>элемента. */
input[type=search]::-webkit-search-decoration,
input[type=search]::-webkit-search-results-button,
input[type=search]::-webkit-search-results-decoration 
{
    -webkit-appearance: none;
    -moz-appearance: none; /*Свойство appearance может быть использовано для того,
     чтобы элемент выглядел как стандартный пользовательский элемент для этой 
     платформы.
                     none  - Никакое специальное оформление не применяется.*/
}

input[type=search] {
    -webkit-appearance: none; /*Никакое специальное оформление не применяется.*/
    -moz-appearance: none;
    -webkit-box-sizing: content-box;
    -moz-box-sizing: content-box;
    box-sizing: content-box;/*Основывается на стандартах CSS,
     при этом свойства width и height  задают ширину и высоту контента
      и не включают в себя значения отступов, полей и границ.
    width + (ЗА ПРЕДНЛАМИ БЛОКА padding + border + margin)
    
    border-box; width + padding + border + (ЗА ПРЕДНЛАМИ БЛОКА margin)*/     
}

/**
 * Address styling not present in IE 7/8/9, Firefox 3, and Safari 4.
 * Known issue: no IE 6 support. */
[hidden] {/*visibility: visible | hidden | collapse | inherit*/
/*hidden - Элемент становится ПОЛНОСТЬЮ ПРОЗРАЧНЫМ, поскольку он продолжает
 участвовать в форматировании страницы.*/
    display: none; /*Временно удаляет элемент из документа. Занимаемое им место
     не резервируется и веб-страница формируется так, словно элемента и не было.*/
}

::-moz-selection {
    background: #b3d4fc;
    text-shadow: none;
}

::selection {/*Псевдоэлемент ::selection применяет стиль к ВЫДЕЛЕННОМУ ПОЛЬЗОВАТЕЛЕМ
 ТЕКСТУ - УЖЕ НА САЙТЕ. 
В правилах стилей допускается использовать следующие свойства:
color, background и background-color.*/
    background: #b3d4fc;
    text-shadow: none;
}

/**
 * Remove inner padding and border in Firefox 3+.
 */

button::-moz-focus-inner,/*внутренний фокус кольцо элемента*/
input::-moz-focus-inner {
    border: 0;
    padding: 0;
}
/*____________________________________reset.css FINISH_____________________________*/

/* lato-regular - latin */
@font-face {
  font-family: 'Lato';
  font-style: normal;
  font-weight: 400;
  src: local('Lato Regular'), local('Lato-Regular'),
       url('../fonts/lato-v16-latin-regular.woff2') format('woff2'), /* Chrome 26+, Opera 23+, Firefox 39+ */
       url('../fonts/lato-v16-latin-regular.woff') format('woff'); /* Chrome 6+, Firefox 3.6+, IE 9+, Safari 5.1+ */
}
/* lato-700 - latin */
@font-face {
  font-family: 'Lato';
  font-style: normal;
  font-weight: 700;
  src: local('Lato Bold'), local('Lato-Bold'),
       url('../fonts/lato-v16-latin-700.woff2') format('woff2'), /* Chrome 26+, Opera 23+, Firefox 39+ */
       url('../fonts/lato-v16-latin-700.woff') format('woff'); /* Chrome 6+, Firefox 3.6+, IE 9+, Safari 5.1+ */
}
/* lato-900 - latin */
@font-face {
  font-family: 'Lato';
  font-style: normal;
  font-weight: 900;
  src: local('Lato Black'), local('Lato-Black'),
       url('../fonts/lato-v16-latin-900.woff2') format('woff2'), /* Chrome 26+, Opera 23+, Firefox 39+ */
       url('../fonts/lato-v16-latin-900.woff') format('woff'); /* Chrome 6+, Firefox 3.6+, IE 9+, Safari 5.1+ */
}
/*_______________________________Неизменная width: блока____________________________*/
html {
  box-sizing: border-box; /*Свойство box-sizing позволяет чтобы свойства
   width и height задавали размеры не контента, а РАЗМЕРЫ БЛОКА.
    В НОРМАЛЬНОМ СЛУЧАЕ: width + (padding + border + margin будут за пределами блока)*/
}

*, *::before, *::after {
  box-sizing: inherit; /*Наследовать от родителя (в нашем случае html)
      теперь ДЛЯ (border-box) ВСЕ width + padding + border - будут ВНУТРИ БЛОКА*/
}
/*________________________________________________________________________________*/
body { /*Задаем ОБЩИЕ НАСТРОЙКИ ДЛЯ ВСЕГО САЙТА - они будут наследоваться 
        всеми внутренними элементами*/
   font-family: 'Lato';
   font-style: normal;
   font-weight: normal;
   font-size: 16px;
   line-height: 1.2;
   color: #102746;
}

img {
  max-width: 100%;/*Чтобы изображение никогда НЕ ПРЕВЫШАЛО размеры своего КОНТЕЙНЕРА*/
  height: auto; /*чтобы изображение всегда сжималось по высоте*/
}

.wrapper {
  max-width: 1060px;
  margin: 0 auto;/*выравниваем по центру*/
  padding: 0 15px; /*чтобы ПРИ ИЗМЕНЕНИИ РАЗМЕРОВ картинка ПОЛНОСТЬЮ НЕ 
  ПРИБИВАЛАСЬ К ЛЕВОМУ(ПРАВ) КРАЮ*/
}

.header {
  position: fixed; /*Фиксируем header - чтобы при прокрутки страници вниз  - header
                   ВСЕГДА ОСТАВАЛСЯ НА МЕСТЕ
  при position: fixed - ЭЛЕМЕНТ ВЫПАДАЕТ ИЗ ОБЩЕГО ПОТОКА как бы
   НЕ ЗАНИМАЕТ ПРОСТРАНСТВО В НЕМ*/

  top: 0; /*Прибиваем header - К ВЕРХНЕЙ ЧАСТИ ЭКРАНА*/
  left: 0; /*Прибиваем header - К ЛЕВОЙ ЧАСТИ ЭКРАНА*/
  width: 100%; /*header - ВСЕГДА ЗАНИМАЕТ 100% ШИРИНЫ ЭКРАНА(при его изменении*/

  transition: .2s linear;/*Значение linear; - Переход происходит равномерно
                         на протяжении всего времени, без колебаний в скорости. */
  padding-bottom: 20px; 
  z-index: 10;/*У нас далее будут наложения блоков один на другой -
  прописываем z-index: со значение побольше - тогда при скролинге
  .header будет ПОВЕРХ ВСЕХ БЛОКОВ*/

}
/*_______Данного класса НЕТ в HTML - CОЗДАЕМ ВРУЧНУЮ ДЛЯ ПРИИЯЗКИ В JS_________*/
.header_active {
  background: #0E1D28;
}
/*_____________________________________________________________________________*/

/*______________Flexbox состоит из гибкого контейнера (flex container)
                           и гибких элементов (flex items). 
    Гибкие элементы могут выстраиваться в строку или столбик, а оставшееся свободное
                 пространство распределяется между ними различными способами.______*/
.header_wrapper {
  display: flex;/*Flexbox состоит из гибкого контейнера (flex container) и гибких
                  элементов (flex items). 
  Гибкие элементы могут выстраиваться в строку или столбик,а оставшееся свободное
  пространство распределяется между ними различными способами.*/
  
  flex-wrap: wrap; /*Flex-элементы переносятся, располагаясь в несколько 
  ГОРИЗОНТАЛЬНЫХ РЯДОВ (если не помещаются в один ряд) в направлении слева направо
  (в rtl справа налево).*/

  align-items: flex-end;/*Нижний край flex-элемента помещается вплотную с flex-линией
  (элементы выравниваются по нижней кромке)*/
  
  justify-content: space-between;/*lex-элементы равномерно распределяются по линии.
   Первый flex-элемент помещается вровень с краем начальной линии, последний
   flex-элемент — вровень с краем конечной линии,а остальные flex-элементы на линии
   распределяются так, чтобы расстояние между любыми двумя соседними элементами
   было одинаковым.*/
  padding-top: 56px; 
}
/*________________________________________________________________________________*/
.header_list {
  display: flex;
  flex-wrap: wrap;
}

.header_item {
  margin-right: 82px; 
}

.header_item:last-child {
  margin-right: 0; 
}

.header_link {
  font-size: 18px;
  line-height: 24px;
  color: white;
  text-decoration: none;
}
.header_link:hover, .header_link:focus, .header_link:active {
/*hover - навели мышь; focus - нaнавели при помощи Tab или курсор в текстовом
 поле ФРМЫ; active - кликнули мышью и не отпускаем или ПКМ*/
  opacity: 0.75; /*прозрачность*/
}
/*________________________________________________________________________________*/
.intro {
  min-height: 100vh; /*высота = 100% ВЫСОТЫ ЭКРАНА*/
  background-image: url(../img/intro-bg.jpg);
  background-repeat: no-repeat;
  background-position: center; 
  background-size: cover;/*картинка будет покрывать бок - ПРИ ЛЮБОМ ИЗМЕНЕИИ
                          ЕГО РАЗМЕРОВ*/
  padding-top: 263px; 
  padding- bottom: 223px;
}

.intro_title {
  font-weight: 500;
  font-size: 50px;
  line-height: 60px;
  color: white;
  max-width: 619px;/*меряем в макете ширину блока - чтобы она была всегда 
                     ТОЧНО ОГРАНИЧЕНА  - max-width:*/
  margin-bottom: 22px;
}

.intro_subtitle {
  font-style: normal;
  font-weight: normal;
  font-size: 16px;
  line-height: 24px;
  color: white;
  max-width: 546px; 
  margin-bottom: 59x;                
}
/*____________________________________ФОРМА_________________________________________*/
.search-form_wrap {
  border: none;/*тег <fieldset> изначально ОБРАМЛЯЕТСЯ РАМКОЙ
  но в данном случае она нам НЕ НУЖНА - поэтому ОТМЕНЯЕМ ЕЕ*/
}

.search-form_info {
  display: flex;
  flex-wrap: wrap;
}

.search-form_field {
  background: transparent;/*сделать фон - прозрачным*/
  background: url(../img/svg/circle-ico.svg);
  background-repeat: no-repeat;
  background-position: left 6px;
  
  border: none;/* -МНОГОСТРОЧНОЕ ТЕКСТОВОЕ ПОЛЕ placeholder изначально ОБРАМЛЯЕТСЯ
  РАМКОЙ, но в данном случае она нам НЕ НУЖНА - поэтому ОТМЕНЯЕМ ЕЕ*/
  border-bottom:2px solid #BFC0C5; 
  margin-right: 70px; 
  
  max-width: 450px; 
  padding-left: 30px; 
  padding-bottom: 22px;
  
  font-weight: 500;
  font-size: 18px;
  color: white;
}

.search-form_field::placeholder{/*Чтобы текст в ф-ме, который быдет набирать
пользователь, - соответствовал заданным параметрам ШРИФТА  - ОТДЕЛЬНО СТИЛИЗУЕМ
РАМКУ В КОТОРОЙ БУДЕТ НАБИРАТЬСЯ ТЕКСТ*/
  font-weight: 500;
  font-size: 16px;
  line-height: 24px;
  color: white;
  }

.search-form_submit {
  padding: 15px 39px;
  text-transform: uppercase;/*трансформирует БУКВЫ -ВСЕ ЗАГЛАВНЫЕ*/
  font-weight: 500;
  font-size: 24px;
  background-color:#1B7DFF;
  color: white;
  border: 0;
}

.search-form_submit:hover,
.search-form_submit:focus,
.search-form_submit:active { 
  background-color: #05326d;
}
/*_____________________________Наложение Блока на Блок____________________________*/
.benefits_wrap {
  max-width: 1262px;
  background-color: white;
  margin: 0 auto; /*выравниваем по центру*/
  box-shadow: 0px 2px 20px rgba(21, 24, 36, 0.15993);
  position: relative;
}
.benefits_title {
  font-weight: 500;
  font-size: 35px;
  line-height: 42px;
  padding: 93px 100px 88px 100px;
 
  position: absolute;
  top: 0; /*прибиваем к левому верхнему углу - т.к. будем его сдвигать при 
  помощи transform:*/
  left: 0;

 
  transform: translateY(-60%);/*сдвиг по оси Y- OТРИЦАТЕЛЬНOЕ ЗНАЧЕНИE- сдвиг Вверх.
Трансформации  (transform:);  - СДВИГАЮТ элемент, не затрагивая остальные
элементы веб-страницы, т.е. другие элементы не сдвигаются относительно него.
ПОЛОЖИТЕЛЬНЫЕ ЗНАНАЧЕНИЯ - сдвиг ВПРАВО и ВНИЗ;
OТРИЦАТЕЛЬНЫЕ ЗНАЧЕНИЯ - сдвиг Влево и Вверх. */

  background-color: white; 
  width: 100%;
}

.benefits_cards {
 display: grid;/*модуль CSS Grid Layout-двумерный МАКЕТ- СЕТКИ
                 разделенный на СТОЛБЦЫ И СТРОКИ.

Размеры дорожек сетки можно задавать с помощью:
относительные единицы длины — например, em, vh, vw; 
абсолютные единицы длины — px; и проценты %. 
Размеры в % вычисляются от ширины или высоты контейнера-сетки.

1) Задаем -СЕТКУ*/

 grid-template-columns: 1fr 1fr 1fr; /* 3 СТОЛБЦА - каждый занимает 1/3 
 ШИРИНЫ grid-контейнера*/
 grid-template-rows: 1fr;/* 1 СТРОКА; fr -доля свободного места в контейнере*/
 grid-column-gap: 55px; /* Разрыв между колонками 10px;*/

 padding: 0 100px;
}

/* 2) - Укажем позиции элементов в Grid-Сетке
 
 С помощью grid-column:(grid-row:) можно назначить расположение grid-элемента
 в сетке, ссылаясь на конкретные grid-линии.
 grid-линии - row ( отделяют СТРОКИ - нумерация СВЕРХУ ВНИЗ)
 grid-линии - column ( отделяют СТОЛБЦЫ - нумерация СЛЕВА НА ПРАВО)

 grid-column: 1/3; - СОКРАЩЕНИЕ ОТ : 
                                 grid-column-start: 1;
                                 grid-column-end:   3;
Свойствами grid-row-start / grid-column-start определяется grid-линия, 
в которой НАЧИНАЕТСЯ grid-элемент, 
а свойствами grid-row-end / grid-column-end
определяется grid-линия, в которой grid-элемент ЗАКАНЧИВАЕТСЯ.

Значения:
<line> — число (номер grid-линии) либо имя grid-линии;

span <number> — grid-элемент будет занимать указанное количество grid-путей;
 Grid-путь (англ. grid track) — пространство между двумя соседними grid-линиями.
 Можно думать о них как о СТРОКАХ и СТОЛБЦАХ сетки. 

span <name> — grid-элемент будет занимать диапазон до grid-линии, имя которой
указано в значении;
auto — автоматическое размещение.*/

.benefits_card {
grid-column: span 1; /*Элемент будет занимать ОДИН СТОЛБЕЦ*/
margin-bottom: 112px;
}


.benefits_card-pic {
  margin-bottom: 37px;
  max-width: 66px;
}
.benefits_card-thumb {
  display: block; /*Свойство display со значением block ДЕЛАЕТ элемент БЛОЧНЫМ. 
  Это свойство нужно для того, чтобы указать отступы сверху и снизу,
  а также межстрочный интервал. 
  Эти свойства работают только для БЛОЧНЫХ элементов.*/
}
.benafits_card-title {
  font-weight: 500;
  font-size: 18px;
  line-height: 24px;
  margin-bottom: 26px;
}

.benefits_card-desc {
  font-weight: normal;
  font-size: 16px;
  line-height: 24px;
  margin-bottom: 39px;
}

.benefits_card-more {
  font-weight: normal;
  font-size: 16px;
  line-height: 24px;
  color: #006DFE;
  text-decoration: none;
                           /*___ Делаем СТРЕЛКУ ___*/
  display: inline-block;/*блочный элемент - который ОБТЕКАЕТСЯ другими элементами
  веб-страницы подобно встроенному элементу.
  display: block; - тут не работает - СТРЕЛКА СДВИНЕТСЯ ВПРАВО ДО КОНЦА БЛОКА,
  а не на 59px;*/
  padding-right: 59px; 
  background: url(../img/svg/arrow-right-ico.svg);
  background-repeat: no-repeat;
  background-position: 95% center;
  /*стрелка (рис) вначале центруется СПРАВА (НО НЕ ПОЛНОСТЬЮ, А НА 95% ОТСТУПА
                                      и поцентру*/
  transition: .2s all; /*СВ-ВА  transition - Устанавливает ЭФФЕКТ ПЕРЕХОДА МЕЖДУ ДВУМЯ
  СОСТОЯНИЯМИ ЭЛЕМЕНТА - они могут быть определены с помощью псевдоэлемента
                        :hover или :active, а также динамически через JavaScript
  переход произойдет через 0.2 секунды  (.2s) и применится для всех св-в (all)*/

}                           

.benefits_card-more:hover, .benefits_card-more:focus {
  background: url(../img/svg/arrow-right-ico.svg);
  background-repeat: no-repeat;
  background-position: right center; 
  /*стрелка (рис) ПРИ НАВЕДЕНИИ - центруется СПРАВА - ПОЛНОСТЬЮ )(right) 
                                   ЭТО ДАЕТ ЭФФЕКТ СМЕЩЕНИЯ СТРЕЛКИ*/
}                       /*__________________________*/

.benefits {
  margin-bottom: 131px;
}
/*_________________________________________________________________________________*/

.wrapper-full {
  max-width: 1262px;
  margin: 0 auto;
  padding: 0 15px; /*чтобы ПРИ ИЗМЕНЕНИИ РАЗМЕРОВ картинка ПОЛНОСТЬЮ НЕ 
  ПРИБИВАЛАСЬ К ЛЕВОМУ(ПРАВ) КРАЮ*/
}

  /*Подчереиваем ДО ПОЛОВИНЫ выражение <h2 class="places_title section-title">
                                           Get inspired for your next trip</h2>
  ____________________Прописываем это как ПСЕВДОЭЛЕМЕНТ_________________________*/
.section-title {
  font-weight: 500;
  font-size: 35px;
  line-height: 42px;

  position: relative;
  padding-bottom: 10px;
  }

 /*Свойство content позволяет вставлять генерируемое содержание в 
текст веб-страницы, которое первоначально в тексте отсутствует.

Применяется СОВМЕСТНО с псевдоэлементами :after и :before (является инлайновым.),
они - указывают отображать новое содержимое после или до элемента
к которому добавляются. */

.section-title::after {
  position: absolute;

  display: block;/*Т.К. псевдоэлемент :after (является инлайновым.) -
  то чтобы его стилизовать - необходимо его сделать БЛОЧНЫМ*/

  content: '';/*св-во content содержит пустую строку, это необходимо, 
  иначе псевдоэлемент не будет правильно отображаться.*/
 
  background-color: #006DFE; 
  width: 253px;  /*параметры ЛИНИИ*/
  height: 3px;
  left: 0;
  bottom: 0;
}
/*_________________________________________________________________________________*/
.places_caption {
  display: flex;
  flex-wrap: wrap;
  align-items: center;/*flex-элементы выравниваются по центру)*/
  justify-content: space-between;
  margin-bottom: 36px;
}

.places_title {
  margin-right: 15px;/*Это сделано для того, чтобы при изменении экрана в сторону
  уменьшения -VIEW ALL НЕ НАЛАЗИЛО НА Get inspired for your next trip */
}

.places_view-all {
  font-weight: normal;
  font-size: 16px;
  line-height: 24px;
  text-align: right;
  color: #006DFE;
  text-decoration: none;
                            /*___ Делаем СТРЕЛКУ ___*/
  display: inline-block;
  padding-right: 59px; 
  background: url(../img/svg/arrow-right-ico.svg);
  background-repeat: no-repeat;
  background-position: 95% center;

  transition: .2s all;
}                           

.places_view-all:hover, .places_view-all:focus {
  background: url(../img/svg/arrow-right-ico.svg);
  background-repeat: no-repeat;
  background-position: right center; 
  }                       /*__________________________*/
  /*_____________________________РАБОТА С ИЗОБРАЖЕНИЯМИ_____________________________
  Изначально все Рис маленинькие и одинаковые - чтобы их сделать больше и разных
  раpмеров - создадим Grid-cетку и каждому Рис - зададим ЗАНИМАТЬ РАЗНОЕ
  код-во СТРОК И СТОЛБЦОВ В СЕТКЕ  */

.places_cards {
  display: grid;
  grid-template-columns: 1fr 1fr 1fr 1fr 1fr 1fr; /* 6 СТОЛБЦОВ (колонок) 
  - каждый занимает 1/6 ШИРИНЫ grid-контейнера*/
 grid-gap: 10px; /* Разрыв И между колонками И между строками -10px;*/
}

.places_card_size-lg {
  grid-column: span 3; /*Элементы ( ВЕРХНИЕ рис) будут занимать ПО ТРИ СТОЛБЦА*/
}

.places_card_size-sm {
 grid-column: span 2; /*Элементы ( НИЖНИЕ рис) будут занимать ПО ДВА СТОЛБЦА*/
}

.places_card-pic {
  width: 100%; /*Рисунки по ширине немного разные - чтобы они занимали полностью
  контейнер - прописываем idth: 100%;*/

  object-fit: cover;/*св-во object-fit используется, чтобы указать, как <img> или
  <video> нужно изменить размер, чтобы соответствовать его контейнеру - в пер.
  с анг. - подгонка объекта.
  Если мы используем object-fit: cover; - это обрезает стороны изображения, 
  сохраняя пропорции - При изменении размеров экрана*/
  transition: 0.15s all;
}

.places_card-pic_size_lg {
  height: 354px;/*Изначальо высота у рис немного отличается - чтобы они были ОДНОЙ
  ВЫСОТЫ - зададим ее для всего класса - ВЕРХНИЕ Рис*/
}

.places_card-pic_size_sm {
  height: 283px;/*Изначальо высота у рис немного отличается - чтобы они были ОДНОЙ
  ВЫСОТЫ - зададим ее для всего класса - НИЖНИЕ Рис*/
}

.places_card {
  position: relative;
  overflow: hidden;/*Контет обрезается, без предоставления прокрутки.
  тогда при наведении на него (.places_card:hover .places_card-pic) - Рис
  НЕ НАЛАЗЯТ ОДИН НА ДРУГОЙ */
}

/*Делаем затемнение рисунков - как background-color (но накладываем его наверх Рис)
 -при помощи псевдоэлемента ::after*/
.places_card::after {

   position: absolute;/*Позиционируем псевдоэленмент - Абсолютно - соответственно
  его родитель -  .places_card - позиционируем Относительно*/
  display: block;/*Т.К. псевдоэлемент :after (является инлайновым.) -
  то чтобы его стилизовать - необходимо его сделать БЛОЧНЫМ*/

  content: '';/*св-во content содержит пустую строку, это необходимо, 
  иначе псевдоэлемент не будет правильно отображаться.*/
 
  width: 100%;
  height: 100%; /*т.к. это будет background-color - необходимо чтобы он 
  занимал ВСЮ ПЛОЩАДЬ контейнера*/

  background-color: rgba(21, 24, 36, 0.4);/*взяли значение слоя Overlay - из Figma*/

  top: 0;
  left: 0;
  z-index: 2;/*Если не прибить background -к ЛЕВОМУ (top: 0;) ВЕРХНЕМУ(left: 0;) углу
  - и не задать его положение НАД КАРТИНКАМИ (z-index: 2;), он поместится браузером
  СНИЗУ ПОСЛЕ РИСУНКОВ, А НЕ НАД НИМИ */
}

.places_card:hover .places_card-pic { /* обращаемся к классу с 
именем .places_card-pic, который находится ВНУТРИ класса .places_card (т.к он -
отвечает за весь тег <figure> на который Навели Курсор*/
transform: scale(1.05); /*Меняем размеры Рис*/
}

.places_card-title {
  font-weight: bold;
  font-size: 50px;
  line-height: 60px;
  color: white;

  position: absolute;
  z-index: 3; /*Подпись нам нужно разместить ЕЩЕ ВЫШЕ ЗАТЕМНЕНИЯ*/
  bottom: 27px;
  left: 29px;
/*мы не пишем margin-left(bottom) - т.к. это обычный текст - НЕ обозначенный как 
БЛОЧНЫЙ ЭЛЕМЕНТ*/
}

.places_card-link {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 4;
}

.places {
  margin-bottom:131px; 
}
/*________________________________________________________________________________*/
.tours {
  margin-bottom: 139px; 
}

.tours__tour {
  display: grid;
  grid-template-columns: 1fr 1fr; /* можно писать (:repeat(2, 1fr);
  2 СТОЛБЦА - каждый занимает 1/2 ШИРИНЫ grid-контейнера*/
  grid-column-gap: 108px;
  grid-row-gap: 0;
  align-items: center;/*аналогично FLEX - выравнивание контента
                                                              ПО ЦЕНТРУ КОНТЕЙНЕРА*/
  margin-bottom: 77px;                                                            
  }

.tour__info {
  padding-left: 47px;
}

.tour__title {
 font-weight: 500;
 font-size: 30px;
 line-height: 40px; 
 margin-bottom: 85px;
}

.tour__desc {
 font-size: 16px;
 line-height: 24px;
 margin-bottom: 58px;
}

.tour__more {
  font-size: 16px;
  line-height: 24px;
  text-align: right;
  color: #006DFE;
  text-decoration: none;
                            /*___ Делаем СТРЕЛКУ ___*/
  display: inline-block;
  padding-right: 59px; 
  background: url(../img/svg/arrow-right-ico.svg);
  background-repeat: no-repeat;
  background-position: 95% center;

  transition: .2s all;
}

 .tour__more:hover, .tour__more:focus {
  background: url(../img/svg/arrow-right-ico.svg);
  background-repeat: no-repeat;
  background-position: right center; 
  } 
  /*_____________________________________________________________________________*/
.top {
  margin-bottom: 86px;
}

.top__title {
  margin-bottom: 54px;
}

.top__cards {
  display: grid;
  grid-template-columns: 1fr 1fr 1fr;
  grid-column-gap: 58px;
  grid-row-gap: 58px; 
}

.top__card {/*Когда текста много после каточки, то кнопка (SEE MORE) сдвинется вниз и
 кнопки в разных карточках (с разным объемом текста) будут НЕ на ОДНОМ МЕСТЕ
 Для этого КНОПКУ - нужно прибить к НИЗУ БЛОКА*/
  display: flex;
  flex-direction: column;/*ПО УМОЛЧАНИЮ ОСЬ РАСПРЕДЕЛЕНИЯ - row (Cлева НАПраво);
  заменим на - column (Cверху ВНИЗ)

  т.е. FLEX - вместо ШИРИНЫ (по умолчанию) - НАЧАЛ ОТРАБАТЫВАТЬ ВЫСОТУ

  (кнопка растянется на всю ширину карточки - для этого
  перейдем в .top__card-more и зададим width: 118px; ) */
}

.top__card-pic {
  position: relative;/*этот блок позиционируем - Относительно, чтобы НА НЕГО НАЛОЖИТЬ
  блок (top__card-stats - absolute) [который вложен ВНЕГО в HTML]*/
  margin-bottom: 45px;
}

.top__card-stats {
  position: absolute;

  bottom: 0;
  left: 0;
  width: 100%;
  /*height: 55px; - можно заменить padding: 16px 25px;*/
  /*Эти ТРИ ПОЗИЦИИ -необходимы чтобы ЧЕТКО 
  наложить (top__card-stats) НА (top__card-pic)*/
  background: rgba(21, 24, 36, 0.6);

  display: flex;
  flex-wrap: wrap;
  align-items: center;
  justify-content: flex-end;/*Изначально загоняем все содержимое контейнера ВПРАВО*/
  
  padding: 16px 25px; 
}

.top__card-title {
 font-weight: 500;
 font-size: 18px;
 line-height: 24px;
 color: white;

 margin:0 auto 0 0; /*FLEX-конструкция позволяет выравнивать ее элементы
 при помощи margin:auto; - расширяются, поглощая дополнительное пространство по
 соответствующей оси(row - OX; column -O минусУ(вниз).
 Их можно использовать для выравнивания или раздвигания
 смежных flex-элементов.

 "NAGOYA" - сдвинетя ВЛЕВО
                     margin:  0   auto    0     0;
                             top  right bottom left
т.е отступ СПРАВА(right) от "NAGOYA" - рассчитывается АВТОМАТИЧЕСКИ(auto)
В ЗАВИШИМОСТИ ОТ ШИРИНЫ НАПОЛНЕННОГО КОНТЕНТА
А остальные отступы (top; bottom; left) =0*/
 }

.top__card-likes {
 font-weight: 500;
 font-size: 16px;
 line-height: 24px;
 color: white;

 padding-right: 20px;/*Cама иконка 16х16px, а отступ ВПРАВО от (221) составляет 4px;
 вычисляем 16+4=20px;*/
 background: url(../img/svg/hart-ico.svg);
 background-repeat: no-repeat;
 background-position: right; /*Иконка [как background] - находится СПРАВА от (221)*/

 margin-right: 14px;
}

.top__card-comments {
 font-weight: 500;
 font-size: 16px;
 line-height: 24px;
 color: white;

 padding-right: 23px;/*Cама иконка 14х14px, а отступ ВПРАВО от (50) составляет 9px;
 вычисляем 14+9=23px;*/
 background: url(../img/svg/comment-ico.svg);
 background-repeat: no-repeat;
 background-position: right; /*Иконка [как background] - находится СПРАВА от (50)*/ 
}

.top__card-desc {
font-size: 16px;
line-height: 24px;
margin-bottom: 31px;
}

.top__card-more {
 /*т.к. мы изменили ОСЬ РАСПРЕДЕЛЕИЯ - вместо ШИРИНЫ (по умолчанию)
 НА ВЫСОТУ -(flex-direction: column) в (.top__card) - то зададим:*/
width: 118px;
margin: auto 0 0 0; /*КНОПКА - прибъется к НИЗУ
                     margin: auto   0    0      0;
                             top  right bottom left
т.е отступ НАД(top) Кнопкой  - рассчитывается АВТОМАТИЧЕСКИ(auto)
в зависимости от ВЫСОТЫ ЗАПОЛНЕННОГО КОНТЕНТА
и она прибита к НИЖНЕМУ ЛЕВОМУ УГЛУ right-0; bottom-0; left-0)  
 - и ВСЕ Кнопки будут на ОДНОМ УРОВНЕ*/

/*Копируем стиль КНОПКИ из (.search-form_submit)*/
padding: 12px 19px;
text-transform: uppercase;/*трансформирует БУКВЫ -ВСЕ ЗАГЛАВНЫЕ*/
font-size: 16px;
line-height: 19px;
background-color:#006DFE;
color: white;
/*border: 0;*/
text-decoration: none; 
}

.top__card-more:hover,
.top__card-more:focus,
.top__card-more:active { 
  background-color: #05326d;
}
/*_______________________________________________________________________________*/
.videos {
width: 100%;
}

.videos_wrapper {
  max-width: 1440px;
  margin: 0 auto; /*Выравниваем по центру*/

  position: relative;
}

.video-item {
  padding-top: 56.25%; 
}
/* ЕСЛИ ЗАДАТЬ padding-top: 100% (грубо говоря ВЫСОТА);- рассчитывается
 ОТНОСИТЕЛЬНО ШИРИНЫ БЛОКА РОДИТЕЛя (.videos_wrapper)
т.е. мы получим КВАДРАТ С РАВНЫМИ СТОРОНАМИ - при ИЗМЕНЕНИИ ЭКРАНА
video - будет изменяться ПРОПОРЦИОНАЛЬНО - НО ЭТО БУДЕТ КВАДРАТ

А нам нужен ПРЯМОУГОЛЬНИК 16х9 (основной формат video)
тогда               16(ширина) - 100%
       9 (высота -padding-top:) - х% 
       х = (9х100)/16 = 56.25%*/

.video-element {
  position: absolute;/*Накладываем контейнер .video-element с video
 НА КОНТЕЙНЕР .videos_wrapper - он имеет ШИРИНУ 1440px - 100% - (16 частей)
 НО .video-element лежит внутри контейнера
        .video-item - то имеет ВЫСОТУ (padding-top: 56.25%;) - (9 частей) ;*/

  top: 0;
  left: 0; /*прибиваем контейнер к ВЕРХНЕМУ-ЛЕВОМУ УГЛУ*/

  width: 100%; /*необходмо, чтобы видео полностью развернулось*/
  height: 100%;/*необходмо, чтобы видео полностью развернулось*/
}
/*_______________________________________________________________________________*/

.footer {
  padding: 119px 0; 
  background-color: #0E1D28; 
}

.footer__item {
  display: flex;
  flex-wrap: wrap;
}
/*_________  ___Разбиваем ОБЩЕЕ пространство - ШИРИНУ - ПОПОЛАМ
                   (50%-для Лготипа и 50%-для Общей Навигации___________________*/
.footer__logo {
  width: 50%;
}
.footer__nav {
  width: 50%;

  display: flex;
  flex-wrap: wrap;
  justify-content: space-between;
}
/*______________________________________________________________________________*/
.footer__menu-title {
  font-weight: 500;
  font-size: 18px;
  line-height: 24px;
  color: white;
}

.footer__menu-link {
  font-size: 16px;
  line-height: 24px;
  color: white;

  text-decoration: none;
}

.footer__menu-link:hover, 
.footer__menu-link:focus, 
.footer__menu-link:active{
  opacity: .75;
}
/*_______________________АДАПТИРУЕМ МЕНЮ  <nav class="header_nav">_________________
  iPpad имеет размеры 768 (ширину) х 1024px; т.е. при widht<768px; - мы хотим 
  чтобы Меню выезжало на весь экран  - "БУРГЕР-меню"
  В HTML на стр.58 - создаем "БУРГЕР-меню"*/
.header__burger {
  width: 40px;
  height: 30px;
  
  position: relative;  /*Чтобы Крутить все 3 ЛИНИИ -необходимо им всем дать 
                        position: absolute;, а контейнеру  - position: relative;*/

  display: none; 
  /*Изначально мы СКРЫВАЕМ Бургер 
                 - т.к. при (НОРМАЛЬНОМ)экране widht>768px; - этот БУРГЕР - НЕ НУЖЕН*/
}

/*________ Чтобы НАРИСОВАТЬ ЛИНИЮ - необходимо обозначить СТРОЧНЫЙ ЭЛЕМЕНТ
                   <span class="header__nav-close-line"></span> ________________*/

.burger__line {
  display: block;/*Прописываем, чтобы стилизовать <span> -который изначально
                                                                СТРОЧНЫЙ элемент*/
  position: absolute;
  left: 0; /*Прибиваем к Левому краю блока .header__burger*/

  width: 100%;/*Чтобы полоски БЫЛО ВИДНО и онирастягивались на ВСЮ ШИРИНУ Бургера*/
  height: 2px;

  background-color: white;
}

.burger__line_first {
  top: 0;
}

.burger__line_second {
  top: 50%; /*Вторую линию смещаем вниз на 50% высоты блока*/
  /*transform: translateY(-50%);*/
}

.burger__line_third {
  bottom: 0;
}

/*ПРИ ширине экрана widht<768px; - необходимо, 
чтобы БУРГЕР(который мы изначально прописали, НО скрыли стр.1166) - ПОЯВЛЯЛСЯ
это делается при помощи
____________________ МЕДИА ЗАПРОСА - ЗАпроса на ШИРИНУ ЭКРАНА____________________*/

@media screen and (max-width: 767px) {
  .header__burger {
    display: block;
  }
}
/*@media screen - Медиа запрос к ЭКРАНУ
  and (max-width: 767px) - и если ширина его (Экрана) будет до 767px включительно
  обращаемся к классу .header__burger (который теперь будет видимым -display: block;)
 */

/*______________Теперь работаем с МЕНЮ  <nav class="header_nav">_________________ */
.header_nav {/*Фиксированно позиционируем - относительно Экрана*/
  position: fixed;

  width: 100%;
  height: 100%; /*Чтобы элемент занял весь экран: cтр 1216; cтр 1218; cтр 1219;*/

  top: 0;
  left: 0; /*Прибиваем к ВЕРХНЕМУ-ЛЕВОМУ КРАЮ*/

  background-color: blue; 
             /*Элемент займет ВЕСЬ ЭКРАН - будет подсвечен(весь экран) СИНИМ цветом*/

  z-index: 10;/*чтобыы .header_nav - был выше "БУРГЕР-меню по оси Z*/

  padding: 70px; 

  transform: translateX(100%);
  /*После того как мы ПОЛНОСТЬЮ оформим все в Навигационной панели - СДВИНЕМ ЕЕ ВПРАВО за пределы экрана
  (Влево -transform: translateX(-100%);*/

  transition: .5s all linear;/*Преобразования будут происходить за 0.5 сек
                                            для Всех элементов -плавно (линейно)*/
}

      /*ДЛЯ JS - пропишем НЕ СУЩЕСТВУЮЩИЙ в HTML класс - обратившись к которому 
           СДВИНУТЫЙ ВПРАВО класс .header_nav {transform: translateX(100%);}
                            БУДЕТ ВОЗВРАЩАТЬСЯ НАЗАД */
.header__nav-active {
   transform: translateX(0%);
}

            /*Здесь мы ПЕРЕОПРЕДЕЛЯЕМ СВ-ВА - которые были заданы для
                          ДЕСКТОПНОЙ ВЕРСИИ - стр 454*/
.header_item {
  width: 100%;
  margin-right: 0;
  margin-bottom: 30px;
}

.header_link {
  font-size: 40px;
  line-height: 50px;
}

.header_item:last-child{
  margin-bottom: 0px;
}

/*ДЕЛАЕМ КРЕСТИК (HML стр 51)- которым мы будем ЗАКРЫВАТЬ АДАПТИВНОЕ МЕНЮ */
.header__nav-close {/*Весь элемент .header_nav - уже ФИксированно отпозиционирован*/
  position: absolute; /*т.к. РОДИТЕЛЬ(.header_nav) - Фиксированно спозиционирован
                        - относительно Экрана - 
  то ДОЧЕРНИЙ ЭЛЕМЕНТ(.header__nav-close) - позиц. Абсолютно - относительно него*/

  width: 40px;
  height: 40px;

  top: 20px;
  right: 20px;

  z-index: 11;/*Делаем на всякий случай -чтобы быть полностью увер, что КРЕСТИК 
                */
  border: 1px solid red;
}

.header__nav-close-line {
  display: block; /*Прописываем, чтобы стилизовать <span> -который изначально
                                                                СТРОЧНЫЙ элемент*/
  position: absolute;

  width: 100%;/*Чтобы ЛИНИИ в Крестика БЫЛО ВИДНО и онирастягивались на ВСЮ ШИРИНУ*/
  height: 2px;
  
  top: 50%;/*устанавливаем полоски в середине блока 40х40px;*/
  background-color: white; 
}

.header__nav-close-line:first-child{
  transform: rotate(45deg);
}

.header__nav-close-line:last-child{
  transform: rotate(135deg);
}
/*_______________________________________________________________________________